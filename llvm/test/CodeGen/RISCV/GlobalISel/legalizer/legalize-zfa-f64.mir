# NOTE: Assertions have been autogenerated by utils/update_mir_test_checks.py UTC_ARGS: --version 5

# RUN: llc -mtriple=riscv32 -mattr=+zfa,+d -run-pass=legalizer -o - %s\
# RUN: | FileCheck %s --check-prefixes=CHECK-ZFA
# RUN: llc -mtriple=riscv64 -mattr=+zfa,+d -run-pass=legalizer -o - %s\
# RUN: | FileCheck %s --check-prefixes=CHECK-ZFA

---
name:            FCEIL
tracksRegLiveness: true
body:             |
  bb.0:
    liveins: $f10_d

    ; CHECK-ZFA-LABEL: name: FCEIL
    ; CHECK-ZFA: liveins: $f10_d
    ; CHECK-ZFA-NEXT: {{  $}}
    ; CHECK-ZFA-NEXT: [[COPY:%[0-9]+]]:_(s64) = COPY $f10_d
    ; CHECK-ZFA-NEXT: [[FCEIL:%[0-9]+]]:_(s64) = G_FCEIL [[COPY]]
    ; CHECK-ZFA-NEXT: $f10_d = COPY [[FCEIL]](s64)
    ; CHECK-ZFA-NEXT: PseudoRET implicit $f10_d
    %0:_(s64) = COPY $f10_d
    %1:_(s64) = G_FCEIL %0
    $f10_d = COPY %1
    PseudoRET implicit $f10_d

...
---
name:            FFLOOR
tracksRegLiveness: true
body:             |
  bb.0:
    liveins: $f10_d

    ; CHECK-ZFA-LABEL: name: FFLOOR
    ; CHECK-ZFA: liveins: $f10_d
    ; CHECK-ZFA-NEXT: {{  $}}
    ; CHECK-ZFA-NEXT: [[COPY:%[0-9]+]]:_(s64) = COPY $f10_d
    ; CHECK-ZFA-NEXT: [[FFLOOR:%[0-9]+]]:_(s64) = G_FFLOOR [[COPY]]
    ; CHECK-ZFA-NEXT: $f10_d = COPY [[FFLOOR]](s64)
    ; CHECK-ZFA-NEXT: PseudoRET implicit $f10_d
    %0:_(s64) = COPY $f10_d
    %1:_(s64) = G_FFLOOR %0
    $f10_d = COPY %1
    PseudoRET implicit $f10_d

...
---
name:            FRINT
tracksRegLiveness: true
body:             |
  bb.0:
    liveins: $f10_d

    ; CHECK-ZFA-LABEL: name: FRINT
    ; CHECK-ZFA: liveins: $f10_d
    ; CHECK-ZFA-NEXT: {{  $}}
    ; CHECK-ZFA-NEXT: [[COPY:%[0-9]+]]:_(s64) = COPY $f10_d
    ; CHECK-ZFA-NEXT: [[FRINT:%[0-9]+]]:_(s64) = G_FRINT [[COPY]]
    ; CHECK-ZFA-NEXT: $f10_d = COPY [[FRINT]](s64)
    ; CHECK-ZFA-NEXT: PseudoRET implicit $f10_d
    %0:_(s64) = COPY $f10_d
    %1:_(s64) = G_FRINT %0
    $f10_d = COPY %1
    PseudoRET implicit $f10_d

...
---
name:            FNEARBYINT
tracksRegLiveness: true
body:             |
  bb.0:
    liveins: $f10_d

    ; CHECK-ZFA-LABEL: name: FNEARBYINT
    ; CHECK-ZFA: liveins: $f10_d
    ; CHECK-ZFA-NEXT: {{  $}}
    ; CHECK-ZFA-NEXT: [[COPY:%[0-9]+]]:_(s64) = COPY $f10_d
    ; CHECK-ZFA-NEXT: [[FNEARBYINT:%[0-9]+]]:_(s64) = G_FNEARBYINT [[COPY]]
    ; CHECK-ZFA-NEXT: $f10_d = COPY [[FNEARBYINT]](s64)
    ; CHECK-ZFA-NEXT: PseudoRET implicit $f10_d
    %0:_(s64) = COPY $f10_d
    %1:_(s64) = G_FNEARBYINT %0
    $f10_d = COPY %1
    PseudoRET implicit $f10_d

...
---
name:            INTRINSIC_TRUNC
tracksRegLiveness: true
body:             |
  bb.0:
    liveins: $f10_d

    ; CHECK-ZFA-LABEL: name: INTRINSIC_TRUNC
    ; CHECK-ZFA: liveins: $f10_d
    ; CHECK-ZFA-NEXT: {{  $}}
    ; CHECK-ZFA-NEXT: [[COPY:%[0-9]+]]:_(s64) = COPY $f10_d
    ; CHECK-ZFA-NEXT: [[INTRINSIC_TRUNC:%[0-9]+]]:_(s64) = G_INTRINSIC_TRUNC [[COPY]]
    ; CHECK-ZFA-NEXT: $f10_d = COPY [[INTRINSIC_TRUNC]](s64)
    ; CHECK-ZFA-NEXT: PseudoRET implicit $f10_d
    %0:_(s64) = COPY $f10_d
    %1:_(s64) = G_INTRINSIC_TRUNC %0
    $f10_d = COPY %1
    PseudoRET implicit $f10_d

...
---
name:            INTRINSIC_ROUND
tracksRegLiveness: true
body:             |
  bb.0:
    liveins: $f10_d

    ; CHECK-ZFA-LABEL: name: INTRINSIC_ROUND
    ; CHECK-ZFA: liveins: $f10_d
    ; CHECK-ZFA-NEXT: {{  $}}
    ; CHECK-ZFA-NEXT: [[COPY:%[0-9]+]]:_(s64) = COPY $f10_d
    ; CHECK-ZFA-NEXT: [[INTRINSIC_ROUND:%[0-9]+]]:_(s64) = G_INTRINSIC_ROUND [[COPY]]
    ; CHECK-ZFA-NEXT: $f10_d = COPY [[INTRINSIC_ROUND]](s64)
    ; CHECK-ZFA-NEXT: PseudoRET implicit $f10_d
    %0:_(s64) = COPY $f10_d
    %1:_(s64) = G_INTRINSIC_ROUND %0
    $f10_d = COPY %1
    PseudoRET implicit $f10_d

...
---
name:            INTRINSIC_ROUNDEVEN
tracksRegLiveness: true
body:             |
  bb.0:
    liveins: $f10_d

    ; CHECK-ZFA-LABEL: name: INTRINSIC_ROUNDEVEN
    ; CHECK-ZFA: liveins: $f10_d
    ; CHECK-ZFA-NEXT: {{  $}}
    ; CHECK-ZFA-NEXT: [[COPY:%[0-9]+]]:_(s64) = COPY $f10_d
    ; CHECK-ZFA-NEXT: [[INTRINSIC_ROUNDEVEN:%[0-9]+]]:_(s64) = G_INTRINSIC_ROUNDEVEN [[COPY]]
    ; CHECK-ZFA-NEXT: $f10_d = COPY [[INTRINSIC_ROUNDEVEN]](s64)
    ; CHECK-ZFA-NEXT: PseudoRET implicit $f10_d
    %0:_(s64) = COPY $f10_d
    %1:_(s64) = G_INTRINSIC_ROUNDEVEN %0
    $f10_d = COPY %1
    PseudoRET implicit $f10_d

...
